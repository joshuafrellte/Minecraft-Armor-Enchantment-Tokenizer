<enchanted_armor> ::= <armor> <enchantment_clause>

<armor> ::= <armor_material> <armor_piece> | <leather_armor>

<armor_material> ::= “Chainmail” | “Iron” | “Gold” | “Diamond” | “Netherite”

<armor_piece> ::= “Helmet” | “Chestplate” | “Leggins” | “Boots”

<leather_armor> ::= “Leather” <leather_armor_piece>

<leather_armor_piece> ::= “Cap” | “Tunic” | “Pants” | “Boots”

<enchantment_clause> ::= “ with “ <enchantment_list>

<enchantment_list> ::= <enchantment> | <enchantment> “, “ <enchantment_list>

<enchantment> ::= <enchantment_with_level> | <enchantment_without_level>

<enchantment_with_level> ::= <armor_enchantment> <level> | “Unbreaking” <level>

<armor_enchantment> ::= 	“Protection” | “Blast Protection” | “Fire Protection” | “Projectile Protection” | “Thorns”

<enchantment_without_level> ::= “Mending” | “Curse of Vanishing” | “Curse of Binding”

<level> ::= “I” | “II” | “III” | “IV”


logic without using pattern and matcher classes
if ((token[i]+" "+token[i+1]).equals("blast protection")) {
        // code here...
        i++;
} else if ((token[i]+" "+token[i+1]+" "+token[i+2]).equals("curse of vanishing")) {
        // code here...
        i += 2;
}

logic of tokenizer via character traversing

spaceCount = 0;
for (int i=0; i<string.length(); i++) {
    if (string.charAt(i)==' ') {
        spaceCount++;
    }
}

String[] arr = new String[spaceCount+1];
String hold = "";
int indexCount = 0;
for (int i=0; i<string.length(); i++) {
    if (Character.isWhitespace(string.charAt(i))) {
        arr[indexCount] = hold;
        hold = "";
        indexCount++;
    } else {
        hold += string.charAt(i);
    }
}

